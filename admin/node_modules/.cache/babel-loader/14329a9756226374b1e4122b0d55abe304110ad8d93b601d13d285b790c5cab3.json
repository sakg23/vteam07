{"ast":null,"code":"var _jsxFileName = \"/home/lutfia/Private_projects/vteam07/admin/src/components/GetCities.tsx\",\n  _s = $RefreshSig$();\nimport citiesModules from \"../modules/citiesFunctions\";\nimport AddButton from \"./AddButton\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetCities = () => {\n  _s();\n  const [cityList, setCityList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchCities = async () => {\n      try {\n        const result = await citiesModules.getcities();\n        if (result.status === \"success\") {\n          setCityList(result.cities);\n        } else {\n          setError(\"Failed to fetch cities from API\");\n        }\n      } catch (err) {\n        setError(\"An error occurred while fetching cities\");\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCities();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading cities...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List of Cities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-dark table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Region\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: cityList.map(city => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"row\",\n            children: city.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: city.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: city.region\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, city.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddButton, {\n      page: \"addcity\",\n      text: \"city\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(GetCities, \"9c3C4J+B7pGM8hthMWSqjpmn6N8=\");\n_c = GetCities;\nexport default GetCities;\nvar _c;\n$RefreshReg$(_c, \"GetCities\");","map":{"version":3,"names":["citiesModules","AddButton","React","useEffect","useState","jsxDEV","_jsxDEV","GetCities","_s","cityList","setCityList","loading","setLoading","error","setError","fetchCities","result","getcities","status","cities","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","scope","map","city","id","name","region","page","text","_c","$RefreshReg$"],"sources":["/home/lutfia/Private_projects/vteam07/admin/src/components/GetCities.tsx"],"sourcesContent":["import citiesModules from \"../modules/citiesFunctions\";\r\nimport AddButton from \"./AddButton\";\r\nimport React, { useEffect, useState } from \"react\";\r\ninterface City {\r\n  id?: number;\r\n  name: string;\r\n  region: string;\r\n}\r\n\r\nconst GetCities: React.FC = () => {\r\n  const [cityList, setCityList] = useState<City[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchCities = async () => {\r\n      try {\r\n        const result = await citiesModules.getcities();\r\n        if (result.status === \"success\") {\r\n          setCityList(result.cities);\r\n        } else {\r\n          setError(\"Failed to fetch cities from API\");\r\n        }\r\n      } catch (err) {\r\n        setError(\"An error occurred while fetching cities\");\r\n        console.error(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCities();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <p>Loading cities...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>Error: {error}</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>List of Cities</h1>\r\n      <table className=\"table table-dark table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">ID</th>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Region</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {cityList.map((city) => (\r\n            <tr key={city.id}>\r\n              <th scope=\"row\">{city.id}</th>\r\n              <td>{city.name}</td>\r\n              <td>{city.region}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n<AddButton page=\"addcity\" text=\"city\" /></div>\r\n  );\r\n};\r\n\r\nexport default GetCities;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
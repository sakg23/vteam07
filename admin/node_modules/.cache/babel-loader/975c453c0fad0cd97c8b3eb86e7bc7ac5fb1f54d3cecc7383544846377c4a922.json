{"ast":null,"code":"var _jsxFileName = \"/home/lutfia/Private_projects/vteam07/admin/src/pages/AddCityForm.tsx\",\n  _s = $RefreshSig$();\nimport AddCity from \"../components/AddCities\";\nimport citiesModules from \"../modules/citiesFunctions\";\nimport Alert from \"../components/Alert\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport authModules from \"../modules/auth\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddCityForm = () => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!authModules.token) {\n      navigate(\"/login\");\n    }\n  }, []);\n  const [checkResult, setCheckResult] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n  const handleFormSubmit = async values => {\n    try {\n      const result = await citiesModules.addCity(values.name, values.region);\n      if (result === \"ok\") {\n        navigate(\"/cities\"); // Navigera till hemsidan efter lyckad inloggning\n        setCheckResult(true);\n        setColor(\"alert-success\");\n        setMessage(\"City has been added\");\n      } else {\n        setCheckResult(true);\n        setColor(\"alert-danger\");\n        setMessage(result); // Visa felmeddelande om inloggningen misslyckas\n      }\n    } catch (error) {\n      console.error(\"Error during adding city\", error);\n      setCheckResult(true); // Visa felmeddelande vid ett oväntat fel\n      setColor(\"alert-danger\");\n      setMessage(\"Error during adding city\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [checkResult && /*#__PURE__*/_jsxDEV(Alert, {\n      color: color,\n      message: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(AddCity, {\n      onSubmit: handleFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(AddCityForm, \"IJJuk+Lyn3YTFx9dyVLhv5T+I5g=\", false, function () {\n  return [useNavigate];\n});\n_c = AddCityForm;\nexport default AddCityForm;\nvar _c;\n$RefreshReg$(_c, \"AddCityForm\");","map":{"version":3,"names":["AddCity","citiesModules","Alert","useState","useEffect","useNavigate","authModules","jsxDEV","_jsxDEV","Fragment","_Fragment","AddCityForm","_s","navigate","token","checkResult","setCheckResult","message","setMessage","color","setColor","handleFormSubmit","values","result","addCity","name","region","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["/home/lutfia/Private_projects/vteam07/admin/src/pages/AddCityForm.tsx"],"sourcesContent":["import AddCity from \"../components/AddCities\";\r\nimport citiesModules from \"../modules/citiesFunctions\";\r\nimport Alert from \"../components/Alert\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport authModules from \"../modules/auth\";\r\n\r\nconst AddCityForm = () => {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!authModules.token) {\r\n      navigate(\"/login\");\r\n    }\r\n  }, []);\r\n\r\n  const [checkResult, setCheckResult] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [color, setColor] = useState(\"\");\r\n  const handleFormSubmit = async (values: {\r\n    name: string;\r\n    region: string;\r\n  }) => {\r\n    try {\r\n      const result = await citiesModules.addCity(values.name, values.region);\r\n      if (result === \"ok\") {\r\n        navigate(\"/cities\"); // Navigera till hemsidan efter lyckad inloggning\r\n        setCheckResult(true);\r\n        setColor(\"alert-success\");\r\n        setMessage(\"City has been added\");\r\n      } else {\r\n        setCheckResult(true);\r\n        setColor(\"alert-danger\");\r\n        setMessage(result); // Visa felmeddelande om inloggningen misslyckas\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during adding city\", error);\r\n      setCheckResult(true); // Visa felmeddelande vid ett oväntat fel\r\n      setColor(\"alert-danger\");\r\n      setMessage(\"Error during adding city\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {checkResult && <Alert color={color} message={message} />}\r\n      <AddCity onSubmit={handleFormSubmit} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddCityForm;\r\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,IAAI,CAACE,WAAW,CAACQ,KAAK,EAAE;MACtBD,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACE,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMkB,gBAAgB,GAAG,MAAOC,MAG/B,IAAK;IACJ,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMtB,aAAa,CAACuB,OAAO,CAACF,MAAM,CAACG,IAAI,EAAEH,MAAM,CAACI,MAAM,CAAC;MACtE,IAAIH,MAAM,KAAK,IAAI,EAAE;QACnBV,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;QACrBG,cAAc,CAAC,IAAI,CAAC;QACpBI,QAAQ,CAAC,eAAe,CAAC;QACzBF,UAAU,CAAC,qBAAqB,CAAC;MACnC,CAAC,MAAM;QACLF,cAAc,CAAC,IAAI,CAAC;QACpBI,QAAQ,CAAC,cAAc,CAAC;QACxBF,UAAU,CAACK,MAAM,CAAC,CAAC,CAAC;MACtB;IACF,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDX,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;MACtBI,QAAQ,CAAC,cAAc,CAAC;MACxBF,UAAU,CAAC,0BAA0B,CAAC;IACxC;EACF,CAAC;EACD,oBACEV,OAAA,CAAAE,SAAA;IAAAmB,QAAA,GACGd,WAAW,iBAAIP,OAAA,CAACN,KAAK;MAACiB,KAAK,EAAEA,KAAM;MAACF,OAAO,EAAEA;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzDzB,OAAA,CAACR,OAAO;MAACkC,QAAQ,EAAEb;IAAiB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACvC,CAAC;AAEP,CAAC;AAACrB,EAAA,CAzCID,WAAW;EAAA,QACEN,WAAW;AAAA;AAAA8B,EAAA,GADxBxB,WAAW;AA2CjB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/lutfia/Private_projects/vteam07/customer-side/src/pages/MapView.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup, Circle } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./assets/css/map.css\";\n\n// Fix leaflet icon paths\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconUrl: \"https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png\",\n  shadowUrl: \"https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png\"\n});\nconst MapView = () => {\n  _s();\n  const [mounted, setMounted] = useState(false);\n  const [stations, setStations] = useState([]);\n  const [zones, setZones] = useState([]);\n  const [scooters, setScooters] = useState([]);\n  useEffect(() => {\n    setMounted(true);\n    const fetchData = async () => {\n      const headers = {\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      };\n      try {\n        const [stationRes, zoneRes, scooterRes] = await Promise.all([fetch(\"http://localhost:5000/v1/chargingstations\", {\n          headers\n        }), fetch(\"http://localhost:5000/v1/parking\"), fetch(\"http://localhost:5000/v1/bikes\")]);\n        const stationsData = await stationRes.json();\n        const zonesData = await zoneRes.json();\n        const scootersData = await scooterRes.json();\n        setStations(stationsData.stations);\n        setZones(zonesData.parkings);\n        setScooters(scootersData.scooters);\n      } catch (err) {\n        console.error(\"Error fetching data\", err);\n      }\n    };\n    fetchData();\n  }, []);\n  if (!mounted || typeof window === \"undefined\") return null;\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [59.3293, 18.0686],\n    zoom: 13,\n    style: {\n      height: \"90vh\",\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"\\xA9 OpenStreetMap\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), stations.map(station => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [station.latitude, station.longitude],\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Laddstation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 41\n        }, this), station.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)\n    }, `station-${station.id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)), zones.map(zone => /*#__PURE__*/_jsxDEV(Circle, {\n      center: [zone.latitude, zone.longitude],\n      radius: zone.radius,\n      pathOptions: {\n        color: \"blue\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Parkering\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 39\n        }, this), zone.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, `zone-${zone.id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)), scooters.map(scooter => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [scooter.current_latitude, scooter.current_longitude],\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Scooter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 37\n        }, this), \"Serial: \", scooter.serial_number, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 44\n        }, this), \"Status: \", scooter.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)\n    }, `scooter-${scooter.id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(MapView, \"g5hr1t7wl5N+Ktz+380a5Y6Y79o=\");\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["useEffect","useState","MapContainer","TileLayer","Marker","Popup","Circle","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconUrl","shadowUrl","MapView","_s","mounted","setMounted","stations","setStations","zones","setZones","scooters","setScooters","fetchData","headers","Authorization","localStorage","getItem","stationRes","zoneRes","scooterRes","Promise","all","fetch","stationsData","json","zonesData","scootersData","parkings","err","console","error","window","center","zoom","style","height","width","children","attribution","url","fileName","_jsxFileName","lineNumber","columnNumber","map","station","position","latitude","longitude","name","id","zone","radius","pathOptions","color","scooter","current_latitude","current_longitude","serial_number","status","_c","$RefreshReg$"],"sources":["/home/lutfia/Private_projects/vteam07/customer-side/src/pages/MapView.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Popup, Circle } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"./assets/css/map.css\"\r\n\r\n// Fix leaflet icon paths\r\ndelete (L.Icon.Default.prototype as any)._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconUrl: \"https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png\",\r\n  shadowUrl: \"https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png\",\r\n});\r\n\r\ninterface Station {\r\n  id: number;\r\n  name: string;\r\n  latitude: number;\r\n  longitude: number;\r\n}\r\n\r\ninterface ParkingZone {\r\n  id: number;\r\n  name: string;\r\n  latitude: number;\r\n  longitude: number;\r\n  radius: number;\r\n}\r\n\r\ninterface Scooter {\r\n  id: number;\r\n  serial_number: string;\r\n  current_latitude: number;\r\n  current_longitude: number;\r\n  status: string;\r\n}\r\n\r\nconst MapView = () => {\r\n  const [mounted, setMounted] = useState(false);\r\n  const [stations, setStations] = useState<Station[]>([]);\r\n  const [zones, setZones] = useState<ParkingZone[]>([]);\r\n  const [scooters, setScooters] = useState<Scooter[]>([]);\r\n\r\n  useEffect(() => {\r\n    setMounted(true);\r\n\r\n    const fetchData = async () => {\r\n      const headers = {\r\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n      };\r\n\r\n      try {\r\n        const [stationRes, zoneRes, scooterRes] = await Promise.all([\r\n          fetch(\"http://localhost:5000/v1/chargingstations\", { headers }),\r\n          fetch(\"http://localhost:5000/v1/parking\"),\r\n          fetch(\"http://localhost:5000/v1/bikes\"),\r\n        ]);\r\n\r\n        const stationsData = await stationRes.json();\r\n        const zonesData = await zoneRes.json();\r\n        const scootersData = await scooterRes.json();\r\n\r\n        setStations(stationsData.stations);\r\n        setZones(zonesData.parkings);\r\n        setScooters(scootersData.scooters);\r\n      } catch (err) {\r\n        console.error(\"Error fetching data\", err);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (!mounted || typeof window === \"undefined\") return null;\r\n\r\n  return (\r\n    <MapContainer center={[59.3293, 18.0686]} zoom={13} style={{ height: \"90vh\", width: \"100%\" }}>\r\n      <TileLayer\r\n        attribution='&copy; OpenStreetMap'\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n\r\n      {/* Charging Stations */}\r\n      {stations.map((station) => (\r\n        <Marker key={`station-${station.id}`} position={[station.latitude, station.longitude]}>\r\n          <Popup>\r\n            <strong>Laddstation</strong><br />\r\n            {station.name}\r\n          </Popup>\r\n        </Marker>\r\n      ))}\r\n\r\n      {/* Parking Zones */}\r\n      {zones.map((zone) => (\r\n        <Circle\r\n          key={`zone-${zone.id}`}\r\n          center={[zone.latitude, zone.longitude]}\r\n          radius={zone.radius}\r\n          pathOptions={{ color: \"blue\" }}\r\n        >\r\n          <Popup>\r\n            <strong>Parkering</strong><br />\r\n            {zone.name}\r\n          </Popup>\r\n        </Circle>\r\n      ))}\r\n\r\n      {/* Scooters */}\r\n      {scooters.map((scooter) => (\r\n        <Marker\r\n          key={`scooter-${scooter.id}`}\r\n          position={[scooter.current_latitude, scooter.current_longitude]}\r\n        >\r\n          <Popup>\r\n            <strong>Scooter</strong><br />\r\n            Serial: {scooter.serial_number}<br />\r\n            Status: {scooter.status}\r\n          </Popup>\r\n        </Marker>\r\n      ))}\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default MapView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}